package io.github.erenkaya.pool;

import java.sql.Connection;
import java.sql.DriverManager;
import java.util.ArrayList;
import java.util.List;

public class EConnectionPool {

	private static List<Connection> freeConnectionList;
	private static List<Connection> usedConnectionList;

	static {
		try {
			freeConnectionList = new ArrayList<Connection>(ConnectionConstants.MAX_DB_CONNECTION);
			usedConnectionList = new ArrayList<Connection>(ConnectionConstants.MAX_DB_CONNECTION);
			Class.forName(ConnectionConstants.JDBC_DRIVER);
			for (int i = 0; i < ConnectionConstants.MAX_DB_CONNECTION; i++) {
				freeConnectionList.add(DriverManager.getConnection(ConnectionConstants.JDBC_DB_URL,
						ConnectionConstants.JDBC_USER, ConnectionConstants.JDBC_PASS));
			}
		} catch (Exception sqlException) {
			System.err.println("Initial connection problem" + sqlException.getMessage());
		}
	}

	public synchronized Connection getConnection() {
		Connection connection = freeConnectionList.remove(freeConnectionList.size() - 1);
		usedConnectionList.add(connection);
		return connection;
	}

	public synchronized boolean releaseConnection(Connection connection) {
		usedConnectionList.remove(connection);
		return freeConnectionList.add(connection);
	}

	public int getPoolSize() {
		return usedConnectionList.size() + freeConnectionList.size();
	}

	@Override
	protected void finalize() throws Throwable {
		usedConnectionList.clear();
		usedConnectionList = null;
		freeConnectionList.clear();
		freeConnectionList = null;
		super.finalize();
	}

}